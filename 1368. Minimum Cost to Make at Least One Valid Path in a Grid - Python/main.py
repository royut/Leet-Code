class Solution(object):
    def minCost(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        n = len(grid)  # rows
        m = len(grid[0])  # columns
        graph = {}
        for i in range(n):
            for j in range(m):
                temp = {(i - 1, j): 1, (i + 1, j): 1, (i, j - 1): 1, (i, j + 1): 1}
                if grid[i][j] == 1:
                    temp[(i, j + 1)] = 0
                elif grid[i][j] == 2:
                    temp[(i, j - 1)] = 0
                elif grid[i][j] == 3:
                    temp[(i + 1, j)] = 0
                elif grid[i][j] == 4:
                    temp[(i - 1, j)] = 0
                if i == 0:
                    temp.pop((i-1, j))
                if j == 0:
                    temp.pop((i, j-1))
                if i == n-1:
                    temp.pop((i+1, j))
                if j == m-1:
                    temp.pop((i, j+1))
                graph[(i, j)] = temp
        # print(graph)

        queue = [((0, 0), 0)]
        visited = {}
        while len(queue) > 0:
            # print(queue)
            loc, cost = queue.pop(0)
            if loc == (n-1, m-1):
                return cost
            visited[loc] = cost
            for newLoc in graph[loc]:
                if newLoc not in visited:
                    if graph[loc][newLoc] == 0:
                        queue.insert(0, (newLoc, cost+graph[loc][newLoc]))
                    else:
                        queue.append((newLoc, cost+graph[loc][newLoc]))


if __name__ == '__main__':
    print('in main')
    grid = [[1, 1, 1, 1], [2, 2, 2, 2], [1, 1, 1, 1], [2, 2, 2, 2]]
    # grid = [[1, 1, 3], [3, 2, 2], [1, 1, 4]]
    grid = [[1, 2], [4, 3]]
    grid = [[3, 3, 2, 1, 1, 3, 1, 2, 1, 2, 4, 2, 1, 4, 3, 4, 4, 4, 2, 2, 1, 3, 2, 3, 4, 3, 1, 1, 4, 1, 3],
     [1, 2, 4, 2, 3, 1, 4, 1, 2, 4, 1, 3, 3, 2, 3, 4, 3, 3, 2, 3, 1, 2, 4, 4, 4, 1, 3, 2, 4, 4, 4],
     [4, 1, 1, 4, 3, 4, 1, 1, 1, 2, 4, 2, 3, 2, 3, 3, 4, 2, 4, 4, 3, 4, 1, 2, 1, 2, 4, 2, 2, 1, 3],
     [2, 3, 4, 2, 1, 4, 3, 4, 1, 4, 1, 2, 2, 2, 3, 4, 4, 2, 4, 4, 2, 2, 1, 4, 4, 2, 2, 4, 4, 3, 3],
     [1, 4, 2, 3, 1, 4, 4, 4, 4, 1, 1, 4, 4, 4, 2, 4, 4, 3, 4, 4, 3, 2, 3, 1, 2, 2, 3, 2, 2, 4, 1],
     [3, 4, 2, 2, 2, 4, 4, 1, 1, 4, 4, 2, 1, 3, 3, 2, 1, 2, 3, 3, 1, 1, 3, 2, 3, 1, 1, 3, 3, 3, 2],
     [2, 1, 4, 3, 2, 1, 4, 4, 1, 4, 1, 4, 4, 2, 2, 4, 1, 2, 4, 2, 4, 4, 2, 4, 3, 1, 4, 1, 3, 4, 1],
     [1, 1, 1, 2, 1, 3, 3, 3, 1, 4, 2, 3, 1, 4, 1, 3, 1, 1, 4, 1, 1, 1, 3, 2, 4, 3, 1, 4, 3, 3, 4],
     [3, 3, 1, 3, 3, 3, 1, 2, 1, 2, 1, 1, 3, 3, 1, 3, 2, 4, 2, 3, 4, 3, 3, 3, 4, 3, 3, 2, 1, 3, 2],
     [4, 2, 3, 3, 3, 4, 4, 3, 1, 1, 2, 4, 2, 2, 4, 4, 3, 1, 2, 2, 2, 1, 4, 1, 2, 2, 1, 1, 4, 1, 1],
     [2, 4, 4, 2, 2, 4, 1, 2, 1, 2, 3, 2, 4, 4, 3, 1, 3, 1, 3, 1, 1, 1, 2, 3, 1, 4, 3, 3, 3, 2, 1],
     [4, 1, 2, 4, 3, 4, 1, 4, 3, 4, 4, 2, 2, 3, 3, 4, 2, 4, 1, 3, 1, 3, 3, 2, 3, 4, 4, 4, 4, 1, 3],
     [3, 2, 2, 1, 3, 1, 2, 4, 1, 2, 2, 4, 3, 3, 4, 4, 2, 2, 2, 1, 4, 4, 1, 3, 1, 2, 2, 1, 3, 4, 1],
     [3, 1, 2, 4, 2, 4, 1, 2, 3, 4, 4, 2, 3, 4, 1, 1, 2, 1, 4, 3, 4, 3, 4, 2, 4, 1, 1, 4, 3, 4, 1],
     [4, 3, 2, 4, 2, 2, 4, 4, 2, 4, 3, 2, 4, 1, 4, 1, 3, 4, 4, 2, 1, 4, 4, 4, 2, 1, 4, 2, 3, 1, 1],
     [4, 2, 4, 3, 3, 2, 3, 3, 3, 4, 1, 3, 3, 2, 4, 3, 2, 1, 2, 1, 1, 4, 1, 1, 4, 4, 1, 1, 2, 3, 2],
     [1, 4, 3, 4, 4, 3, 3, 3, 1, 1, 3, 1, 1, 1, 4, 1, 2, 1, 3, 4, 4, 4, 1, 4, 4, 4, 3, 3, 1, 2, 3],
     [2, 1, 4, 4, 3, 2, 2, 1, 1, 2, 2, 4, 2, 2, 3, 4, 2, 3, 4, 4, 4, 1, 4, 2, 4, 2, 2, 3, 1, 2, 2],
     [2, 2, 2, 1, 1, 1, 2, 4, 3, 2, 2, 4, 2, 3, 3, 2, 1, 2, 3, 1, 4, 4, 2, 2, 3, 3, 2, 2, 4, 4, 4],
     [1, 4, 2, 1, 4, 1, 1, 1, 4, 2, 2, 4, 4, 2, 1, 4, 4, 4, 3, 1, 1, 2, 3, 2, 2, 1, 2, 2, 1, 2, 4],
     [1, 1, 1, 3, 3, 3, 1, 4, 1, 1, 1, 3, 2, 1, 3, 3, 4, 3, 1, 1, 3, 3, 4, 2, 3, 2, 1, 2, 3, 2, 3],
     [1, 3, 4, 2, 2, 2, 2, 4, 3, 1, 3, 3, 1, 3, 4, 1, 2, 3, 1, 3, 4, 2, 3, 2, 4, 1, 3, 3, 1, 3, 2],
     [2, 4, 4, 2, 1, 2, 3, 2, 3, 4, 1, 2, 2, 4, 2, 3, 3, 1, 4, 1, 3, 3, 3, 1, 2, 1, 2, 4, 2, 4, 1],
     [1, 2, 1, 1, 3, 3, 2, 2, 1, 4, 1, 2, 4, 4, 1, 2, 2, 2, 1, 3, 1, 1, 3, 1, 2, 2, 4, 3, 3, 1, 1],
     [3, 1, 2, 2, 4, 1, 2, 4, 4, 1, 3, 1, 4, 1, 4, 2, 3, 2, 1, 4, 1, 1, 2, 3, 4, 1, 2, 2, 2, 1, 1],
     [1, 4, 3, 4, 2, 2, 1, 3, 2, 3, 4, 4, 1, 4, 4, 2, 4, 4, 2, 1, 1, 1, 2, 3, 3, 1, 4, 1, 1, 2, 1],
     [1, 4, 4, 3, 2, 1, 4, 2, 3, 2, 2, 4, 4, 1, 2, 3, 3, 2, 3, 1, 4, 2, 1, 4, 1, 2, 3, 4, 1, 3, 3],
     [2, 3, 2, 2, 2, 4, 1, 1, 4, 2, 4, 1, 2, 4, 2, 3, 1, 3, 3, 1, 2, 3, 2, 2, 1, 2, 3, 3, 3, 2, 3],
     [1, 2, 2, 1, 3, 4, 2, 2, 3, 3, 3, 3, 1, 2, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 3, 3, 1, 4, 2, 2, 3],
     [3, 3, 1, 1, 2, 3, 1, 2, 2, 2, 4, 3, 2, 1, 1, 1, 4, 1, 4, 1, 4, 4, 1, 2, 1, 2, 3, 4, 1, 3, 3],
     [3, 1, 4, 2, 2, 1, 4, 1, 3, 4, 2, 2, 2, 1, 2, 4, 4, 3, 2, 3, 2, 3, 1, 2, 1, 3, 1, 2, 4, 1, 2],
     [2, 3, 2, 4, 3, 2, 3, 1, 2, 3, 3, 3, 1, 1, 2, 3, 1, 2, 4, 3, 4, 2, 4, 2, 2, 3, 1, 1, 1, 1, 3],
     [3, 3, 1, 2, 4, 4, 1, 1, 4, 1, 2, 3, 1, 2, 1, 3, 2, 4, 4, 4, 3, 2, 3, 4, 4, 1, 2, 3, 3, 4, 3],
     [1, 2, 2, 4, 3, 4, 2, 2, 3, 3, 3, 1, 1, 2, 2, 2, 3, 4, 3, 4, 1, 2, 2, 2, 1, 4, 4, 3, 4, 3, 1],
     [1, 4, 2, 2, 4, 1, 1, 2, 1, 4, 2, 1, 4, 1, 3, 1, 1, 2, 1, 4, 1, 3, 1, 4, 2, 3, 2, 3, 3, 1, 2],
     [3, 3, 4, 2, 2, 4, 1, 4, 4, 4, 3, 2, 1, 3, 2, 3, 2, 4, 2, 1, 2, 4, 2, 2, 3, 3, 3, 1, 1, 3, 3],
     [3, 1, 1, 3, 4, 3, 4, 2, 3, 4, 2, 2, 2, 3, 4, 1, 3, 2, 1, 4, 4, 3, 3, 4, 4, 4, 4, 1, 3, 1, 2],
     [1, 1, 4, 4, 4, 4, 2, 4, 2, 1, 2, 4, 3, 1, 1, 1, 1, 1, 2, 1, 4, 2, 2, 3, 1, 1, 4, 2, 1, 4, 1],
     [2, 2, 2, 4, 2, 2, 4, 1, 1, 4, 2, 1, 1, 4, 3, 4, 1, 2, 4, 1, 4, 1, 4, 2, 1, 1, 2, 3, 2, 3, 4],
     [3, 3, 4, 2, 2, 3, 1, 1, 2, 4, 3, 4, 2, 2, 2, 3, 1, 1, 1, 2, 4, 1, 1, 2, 3, 2, 3, 1, 3, 1, 1],
     [1, 4, 3, 2, 4, 1, 1, 4, 2, 4, 3, 2, 4, 4, 4, 3, 3, 1, 4, 4, 2, 4, 3, 1, 1, 1, 4, 1, 2, 4, 2],
     [1, 2, 4, 1, 1, 2, 4, 4, 1, 1, 4, 3, 3, 4, 2, 4, 1, 3, 4, 4, 4, 2, 2, 4, 2, 3, 2, 4, 2, 2, 2],
     [1, 3, 2, 4, 2, 3, 4, 2, 4, 1, 1, 4, 4, 3, 2, 2, 1, 1, 1, 3, 1, 2, 4, 3, 2, 1, 4, 3, 4, 2, 3],
     [4, 3, 4, 1, 2, 4, 1, 1, 3, 3, 4, 1, 3, 4, 3, 4, 2, 2, 2, 4, 3, 1, 3, 4, 1, 3, 4, 1, 1, 3, 1],
     [3, 3, 2, 3, 2, 2, 1, 2, 2, 2, 3, 4, 1, 3, 2, 4, 4, 4, 1, 1, 1, 3, 1, 1, 2, 3, 4, 3, 3, 4, 2],
     [4, 2, 4, 2, 1, 4, 3, 1, 3, 2, 1, 2, 2, 4, 3, 2, 4, 4, 4, 3, 2, 1, 1, 1, 3, 3, 4, 2, 4, 3, 2],
     [1, 2, 3, 4, 3, 1, 3, 1, 2, 3, 4, 2, 1, 3, 1, 4, 3, 2, 3, 4, 4, 4, 3, 2, 1, 3, 3, 2, 2, 1, 3],
     [3, 3, 4, 3, 4, 2, 2, 4, 1, 1, 1, 1, 3, 4, 2, 4, 3, 1, 4, 4, 4, 2, 4, 4, 1, 2, 3, 3, 4, 2, 2],
     [4, 3, 2, 1, 4, 3, 4, 1, 2, 2, 2, 3, 2, 1, 1, 3, 1, 1, 1, 4, 4, 2, 2, 3, 4, 4, 2, 3, 1, 1, 3],
     [4, 1, 2, 4, 4, 1, 3, 2, 3, 1, 3, 2, 2, 2, 4, 4, 4, 3, 4, 2, 3, 2, 3, 3, 2, 4, 3, 3, 4, 4, 4],
     [4, 4, 1, 2, 3, 2, 2, 3, 1, 2, 2, 4, 1, 2, 2, 4, 3, 4, 1, 1, 2, 2, 2, 1, 2, 1, 1, 4, 4, 2, 3],
     [1, 2, 3, 4, 3, 4, 4, 2, 1, 2, 3, 3, 1, 3, 2, 2, 3, 3, 1, 3, 1, 1, 3, 3, 3, 4, 2, 2, 3, 2, 2],
     [1, 4, 1, 1, 4, 2, 1, 4, 2, 2, 3, 4, 3, 2, 4, 1, 3, 2, 1, 4, 3, 2, 4, 2, 3, 3, 1, 2, 1, 1, 3],
     [2, 1, 4, 1, 1, 4, 4, 4, 2, 2, 4, 4, 2, 3, 2, 1, 1, 1, 4, 1, 3, 4, 3, 3, 2, 1, 3, 1, 1, 2, 1],
     [1, 1, 2, 4, 2, 4, 2, 1, 2, 1, 2, 1, 3, 4, 2, 2, 2, 3, 2, 3, 2, 4, 3, 1, 4, 3, 4, 2, 3, 1, 2],
     [4, 2, 1, 2, 1, 2, 2, 1, 3, 3, 3, 4, 4, 1, 1, 4, 2, 4, 4, 3, 4, 4, 2, 2, 2, 3, 4, 2, 3, 2, 3],
     [4, 4, 2, 4, 2, 1, 3, 4, 2, 3, 3, 4, 4, 4, 1, 3, 4, 1, 1, 2, 3, 3, 4, 3, 2, 2, 3, 3, 3, 1, 3],
     [2, 3, 2, 2, 2, 3, 1, 3, 4, 4, 4, 2, 1, 2, 2, 2, 4, 4, 4, 1, 4, 1, 3, 2, 3, 3, 4, 3, 1, 2, 2],
     [4, 1, 4, 4, 1, 3, 1, 2, 2, 4, 4, 4, 4, 4, 3, 1, 1, 1, 2, 3, 3, 3, 4, 2, 1, 2, 1, 2, 2, 1, 4],
     [1, 4, 3, 2, 4, 4, 2, 4, 2, 2, 3, 3, 2, 3, 2, 4, 4, 4, 4, 1, 3, 1, 3, 1, 2, 2, 4, 2, 2, 1, 2],
     [1, 3, 3, 2, 3, 1, 4, 4, 1, 1, 3, 2, 3, 1, 1, 3, 1, 1, 4, 4, 2, 1, 2, 3, 1, 1, 4, 1, 2, 4, 4],
     [4, 1, 1, 4, 1, 4, 2, 1, 3, 4, 3, 3, 1, 3, 4, 1, 4, 1, 1, 4, 1, 4, 4, 4, 4, 1, 2, 4, 4, 1, 2],
     [3, 2, 3, 4, 2, 2, 2, 1, 2, 2, 4, 1, 3, 2, 4, 1, 3, 3, 4, 4, 4, 1, 3, 4, 2, 3, 2, 3, 1, 2, 4],
     [1, 3, 2, 2, 2, 1, 3, 2, 4, 3, 2, 2, 3, 1, 4, 1, 4, 2, 1, 2, 3, 2, 2, 2, 1, 2, 3, 3, 1, 3, 4],
     [1, 2, 4, 2, 4, 1, 1, 4, 1, 1, 1, 3, 1, 1, 4, 3, 1, 2, 3, 3, 4, 1, 4, 3, 3, 4, 2, 1, 2, 4, 4],
     [3, 3, 2, 3, 4, 2, 3, 4, 4, 3, 4, 1, 2, 2, 2, 3, 3, 4, 3, 2, 2, 3, 1, 2, 2, 1, 2, 4, 4, 4, 2],
     [1, 2, 3, 1, 3, 4, 1, 3, 3, 1, 3, 1, 3, 1, 3, 2, 4, 4, 3, 3, 1, 3, 4, 1, 2, 2, 4, 4, 3, 2, 1],
     [4, 4, 1, 4, 1, 4, 2, 4, 1, 1, 3, 2, 1, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 3, 1, 2, 2],
     [4, 1, 2, 2, 4, 4, 3, 2, 2, 4, 2, 3, 4, 4, 3, 4, 1, 1, 2, 4, 2, 4, 2, 2, 1, 1, 2, 1, 2, 4, 1],
     [2, 4, 1, 1, 1, 4, 4, 1, 1, 1, 4, 3, 4, 3, 4, 2, 3, 4, 1, 1, 4, 3, 1, 4, 3, 2, 1, 4, 2, 3, 4],
     [2, 1, 4, 4, 1, 1, 2, 3, 4, 3, 2, 2, 4, 4, 2, 1, 4, 1, 2, 3, 4, 4, 4, 4, 4, 4, 2, 3, 4, 4, 1],
     [4, 1, 1, 1, 4, 2, 1, 4, 3, 1, 2, 1, 2, 1, 3, 4, 1, 3, 4, 4, 1, 2, 2, 4, 3, 1, 1, 4, 3, 3, 1],
     [4, 2, 1, 1, 4, 3, 1, 4, 4, 3, 2, 3, 3, 1, 4, 4, 3, 3, 4, 4, 1, 3, 4, 3, 1, 4, 2, 1, 1, 3, 2],
     [4, 4, 2, 2, 2, 3, 2, 4, 2, 1, 2, 2, 1, 4, 2, 3, 3, 2, 4, 2, 3, 3, 2, 1, 1, 3, 1, 1, 4, 3, 3],
     [1, 4, 2, 1, 2, 2, 3, 3, 2, 3, 3, 4, 1, 4, 4, 2, 2, 3, 3, 2, 4, 2, 1, 2, 1, 4, 4, 2, 1, 2, 3],
     [1, 3, 2, 2, 4, 2, 1, 3, 1, 4, 1, 3, 4, 1, 3, 2, 4, 3, 1, 4, 1, 3, 2, 2, 3, 4, 1, 1, 4, 4, 2],
     [4, 2, 2, 3, 3, 4, 2, 1, 3, 2, 4, 2, 1, 1, 1, 2, 3, 1, 2, 1, 3, 2, 1, 1, 4, 2, 3, 4, 4, 3, 3],
     [2, 2, 2, 3, 2, 1, 3, 4, 2, 4, 3, 2, 4, 1, 2, 2, 3, 2, 3, 1, 3, 2, 3, 3, 2, 4, 4, 2, 3, 4, 3],
     [2, 1, 3, 3, 4, 3, 3, 2, 4, 4, 4, 4, 2, 2, 1, 4, 1, 3, 4, 3, 4, 2, 2, 2, 1, 3, 3, 4, 2, 2, 3],
     [3, 1, 2, 4, 2, 1, 2, 4, 1, 3, 4, 2, 3, 4, 4, 1, 3, 2, 1, 3, 2, 2, 3, 1, 4, 3, 4, 3, 3, 3, 4],
     [4, 2, 3, 4, 3, 2, 3, 2, 3, 3, 4, 4, 1, 2, 4, 3, 3, 2, 1, 3, 4, 2, 4, 1, 4, 4, 3, 3, 2, 1, 2],
     [1, 1, 1, 3, 2, 1, 2, 2, 2, 3, 2, 2, 3, 2, 2, 1, 3, 4, 3, 2, 2, 3, 4, 3, 3, 4, 3, 4, 2, 1, 4],
     [3, 4, 4, 1, 1, 4, 1, 2, 4, 1, 1, 4, 3, 4, 1, 4, 2, 1, 3, 2, 2, 2, 2, 3, 3, 4, 1, 2, 1, 3, 1],
     [3, 1, 2, 4, 3, 2, 3, 3, 2, 2, 2, 4, 4, 1, 4, 3, 1, 4, 4, 4, 4, 1, 2, 1, 3, 2, 2, 1, 3, 2, 4],
     [4, 1, 3, 3, 1, 1, 4, 4, 3, 3, 4, 3, 2, 2, 1, 3, 2, 1, 2, 3, 3, 4, 2, 2, 1, 1, 4, 3, 1, 4, 4],
     [4, 3, 4, 1, 3, 3, 2, 1, 4, 4, 4, 4, 3, 3, 2, 1, 2, 1, 2, 4, 3, 1, 2, 2, 1, 2, 2, 4, 3, 2, 2],
     [3, 4, 2, 3, 3, 3, 2, 2, 3, 2, 1, 2, 3, 4, 1, 4, 1, 1, 2, 3, 2, 2, 2, 1, 2, 4, 3, 4, 3, 1, 1],
     [2, 3, 3, 3, 1, 1, 1, 2, 4, 3, 1, 3, 1, 1, 2, 2, 2, 3, 1, 3, 2, 1, 2, 4, 3, 2, 3, 4, 2, 4, 3],
     [2, 4, 2, 3, 4, 2, 1, 2, 1, 1, 4, 3, 3, 4, 3, 3, 3, 3, 3, 1, 3, 3, 4, 2, 1, 3, 3, 3, 4, 3, 1],
     [3, 2, 4, 4, 1, 4, 1, 4, 2, 2, 1, 2, 4, 3, 3, 2, 1, 2, 4, 4, 3, 2, 2, 4, 4, 3, 2, 3, 1, 3, 1]]
    print(Solution().minCost(grid))
